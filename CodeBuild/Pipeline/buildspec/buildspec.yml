version: 0.2

env:
  variables:
    TERRAFORM_VERSION: "1.5.5"

phases:
  install:
    commands:
      # --- CORREÇÃO DE PERMISSÃO APLICADA AQUI ---
      - |
        echo "Instalando o Terraform ${TERRAFORM_VERSION}..."
        ARCH=$(uname -m | sed -e 's/aarch64/arm64/' -e 's/x86_64/amd64/')
        wget -q "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_${ARCH}.zip"
        
        # 1. Descompacta o arquivo no diretório atual (que é gravável)
        unzip terraform_*.zip
        
        # 2. Cria um diretório 'bin' no diretório home do usuário (gravável)
        mkdir -p $HOME/bin
        
        # 3. Move o executável do Terraform para esse diretório
        mv terraform $HOME/bin/
        
        # 4. Adiciona o novo diretório ao PATH para que o comando 'terraform' seja encontrado
        export PATH="$HOME/bin:$PATH"
        
        echo "Verificando a instalação do Terraform..."
        terraform --version

  pre_build:
    commands:
      - |
        echo "Construindo o caminho do S3 para o arquivo main.tf..."
        TF_CODE_PATH="s3://${AWS_S3_BUCKET_TARGET_NAME_0}/states/${STATE_NAME}/main.tf"
        
        echo "Baixando o arquivo main.tf de: ${TF_CODE_PATH}"
        aws s3 cp "${TF_CODE_PATH}" .
        
        echo "Arquivo main.tf baixado com sucesso."
        echo "Listando arquivos no diretório atual para confirmação:"
        ls -la

  build:
    commands:
      - |
        echo "Inicializando o Terraform..."
        terraform init -reconfigure

        echo "Executando o comando Terraform: ${COMMAND}"
        case ${COMMAND} in
          plan)
            echo "Gerando o plano do Terraform..."
            terraform plan
            ;;
          apply)
            echo "Gerando o plano para aplicação..."
            terraform plan -out=tfplan
            echo "Aplicando as configurações do Terraform..."
            terraform apply -auto-approve tfplan
            ;;
          destroy)
            echo "Destruindo a infraestrutura..."
            terraform destroy -auto-approve
            ;;
          *)
            echo "Comando '${COMMAND}' inválido. Use 'plan', 'apply' ou 'destroy'."
            exit 1
            ;;
        esac

  post_build:
    commands:
      - echo "Build para o comando '${COMMAND}' concluído."
